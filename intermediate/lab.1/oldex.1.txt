# Name: JHR
# Date: Oct 30, 2021
# File: ex.1.txt
# Desc: Week 1 exercises

# List of commands used to create directories:
- cd
- mkdir
- for sequence
- touch 
- tree

# Tree Output
cs160b
├── 1
│   ├── ex.1.sh
│   └── lab.1.sh
├── 2
│   ├── ex.2.sh
│   └── lab.2.sh
├── 3
│   ├── ex.3.sh
│   └── lab.3.sh
├── 4
│   ├── ex.4.sh
│   └── lab.4.sh
├── 5
│   ├── ex.5.sh
│   └── lab.5.sh
├── 6
│   ├── ex.6.sh
│   └── lab.6.sh
├── 7
│   ├── ex.7.sh
│   └── lab.7.sh
└── 8
    ├── ex.8.sh
    └── lab.8.sh

8 directories, 16 files



# Create topsecret file

#!/bin/bash
# NAME: JHR
# DATE: 2021-10-30 Sat
# FILE: wk1_create_topsecret.sh
# DESC: Create Exercise 1's topsecret directory and files
# USAGE:
#   Set the file permissions to 700 so that it is executable.
#   Run this script in the directory you will be using to contain the
#   scripts that you create for this course. Decide how you will
#   organize eight weeks of assignments.
#
#   Run the script to create the topsecret directory and files. Either:
#	bash wk1_create_topsecret.sh
#   or
#	./wk1_create_topsecret.sh
#######################################################################

echo "Attempting to create the topsecret directory"
cd ~/cs160b
mkdir topsecret
cd topsecret
# Loop through some file names
for i in feb96 jan12.02 jan19.02 jan26.02 jan5.02 jan95 jan96 jan97 jan98 mar98 memo1 memo10 memo2 memo2.sv
do
    # Echo text to the file name is $i
    echo Creating the file $i
    echo "###############################################" > $i
    # Concatenate the rest of the text
    echo TOP SECRET CS 160B FILE --- FOR YOUR EYES ONLY: >> $i
    echo "-----------------------------------------------" >> $i
    echo This file is named: $i >> $i
    echo "###############################################" >> $i
done




# The actual exercises

1. 

echo *
feb96 jan12.02 jan19.02 jan26.02 jan5.02 jan95 jan96 jan97 jan98 mar98 memo1 memo10 memo2 memo2.sv

echo *[!0-9]
memo2.sv

echo m[a-df-z]*
mar98

echo [A-Z]*
feb96 jan12.02 jan19.02 jan26.02 jan5.02 jan95 jan96 jan97 jan98 mar98 memo1 memo10 memo2 memo2.sv

echo jan*
jan12.02 jan19.02 jan26.02 jan5.02 jan95 jan96 jan97 jan98

 echo .
.

echo ?????
feb96 jan95 jan96 jan97 jan98 mar98 memo1 memo2

echo *02
jan12.02 jan19.02 jan26.02 jan5.02

echo jan?? feb?? mar??
jan95 jan96 jan97 jan98 feb96 mar98


echo [fjm][ae][bnr]*
feb96 jan12.02 jan19.02 jan26.02 jan5.02 jan95 jan96 jan97 jan98 mar98



2.

ls | wc -l				# pipes the output of ls to wc -l which outputs the number of lines in the ls output

rm ???					# removes files with 3 character names

who | wc -l				# pipes the output of who into wc -l which outputs the number of users logged into the system

mv progs/* /users/steve/backup		# moves everything in the 'progs/' directory to '/users/steve/backup' directory

ls *.c | wc -l				# pipes the output ls *.c to wc -l which outputs the number of lines ending in .c (C files)

rm *.o					# removes files ending in .o 

who | sort				# pipes the output of who into sort which outputs an alphabetically sorted list of users logged in

cd; pwd					# changes directory to root and prints the working directory

cp memo1 ..				# copies memo1 file into its parent directory

plotdata 2>errors &			# redirects standard error output from 'plotdata' into a file named 'errors' in the background (&)

